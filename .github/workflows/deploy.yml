name: Deploy Go URL Shortener to EC2

on:
  push:
    branches: [ main ]

env:
  GO_VERSION: '1.23'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('backend/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: cd backend && go mod download
    
    - name: Build for Linux AMD64
      run: |
        cd backend
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o url-shortener cmd/api/main.go
        ls -lah url-shortener   # Debug: check binary exists
        file url-shortener      # Debug: confirm it's a Linux binary

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: url-shortener-binary
        path: backend/url-shortener
        retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: url-shortener-binary

    - name: Debug artifact contents
      run: |
        echo "📂 Current directory:"
        pwd
        ls -lah
        echo "📂 Inside artifact folder (if exists):"
        ls -lah url-shortener-binary || true

    - name: Prepare binary
      run: |
        if [ -d url-shortener-binary ]; then
          echo "📦 Moving binary out of artifact folder"
          mv url-shortener-binary/url-shortener .
        fi
        chmod +x url-shortener
        echo "📂 Final directory listing before deploy:"
        ls -lah
        file url-shortener || true

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Test SSH connection
      run: |
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "echo '✅ Connected from GitHub Actions'"

    - name: Deploy binary to EC2
      run: |
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "mkdir -p /home/ubuntu/url-shortener"
        echo "🚀 Copying binary to EC2..."
        scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no url-shortener ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/url-shortener/url-shortener
        echo "🔄 Restarting service..."
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "
          ls -lah /home/ubuntu/url-shortener
          sudo systemctl daemon-reload
          sudo systemctl restart url-shortener
          sudo systemctl status url-shortener --no-pager
        "

    - name: Health check
      run: |
        echo "🌐 Checking health endpoint..."
        sleep 5
        curl -v https://api.takeme.site/health || exit 1
